// -----MOTOR INITILIASATION-------
#include <Adafruit_MotorShield.h>
// Initialise motor shield
Adafruit_MotorShield AFMS = Adafruit_MotorShield();
// Initialise motors
Adafruit_DCMotor *leftMotor = AFMS.getMotor(3); // M3 pin
Adafruit_DCMotor *rightMotor = AFMS.getMotor(4); // M4 pin
// Initialise motor variables
int motorSpeed = 200; // 200
int reverseMotorSpeed = 200; // (may need separate speed calibration for reversing)
int steeringMotorSpeed = 180; // 180
int turningMotorSpeed = 150; // 180
int slowMotorSpeed = 150; // CALIBRATE
int timeLength = 200; // Define turning time
bool isMoving = false; // Tracks whether the robot is moving
// ----------------------------------
// -----LED INITILIASATION-------
bool LED = false;
// Initialise LED
#define LED_PIN 11 // Adjust pin number as needed
// ----------------------------------
// -----Line Sensor INITILIASATION-------
int left_line_sensor_pin = 2; // left line sensor
int right_line_sensor_pin = 13; // right line sensor
int front_left_line_sensor_pin = 4; // sensor on line at front
int front_right_line_sensor_pin = 11; // sensor on line at back
// ----------------------------------
// -----Junction INITILIASATION-------
bool at_T_junction = false; // can only go left or right
bool at_right_T_junction = false; // can only go right or forward
bool at_left_T_junction = false; // can only go left or forward

bool left = false;
bool right = false;
static unsigned long totalMillis = 50;
unsigned long startMillis = 0;
bool junction_detected = false;

bool turn_left = false;
bool turn_right = false;
bool started_turn_from_left_on_line = false;
bool started_turn_from_right_on_line = false;
bool check_end_turn = false;

// ----------------------------------

// -----Other Vars INITILIASATION-------
bool reverse = false;
bool left_180 = false; // 180 turn left
bool right_180 = false; // 180 turn right
//

// Additional global variable for LED blinking control
unsigned int loopCounter = 0; // Counter for loop iterations

void setup() {
  // Start the motor shield
  AFMS.begin();
  // Set initial motor speed to 0
  leftMotor->setSpeed(0);
  rightMotor->setSpeed(0);
  // Initial direction
  leftMotor->run(FORWARD);
  rightMotor->run(FORWARD);
  pinMode(left_line_sensor_pin, INPUT); // Initialize Right sensor as an input
  pinMode(right_line_sensor_pin, INPUT); // Initialize Left sensor as an input
  pinMode(front_left_line_sensor_pin, INPUT); // Initialize front sensor as an input
  pinMode(front_right_line_sensor_pin, INPUT); // Initialize back sensor as an input
  // Initialize Serial Communication at 9600 baud rate
  Serial.begin(9600);
  Serial.println("Start");
  delay(100); // Ensure serial communication is fully set up

  pinMode(LED_PIN, OUTPUT); // Set the LED pin as output
}

void loop() {
  int left_line_value = digitalRead(left_line_sensor_pin); // read left input value
  int right_line_value = digitalRead(right_line_sensor_pin); // read right input value
  int front_left_line_value = digitalRead(front_left_line_sensor_pin); // read front input value
  int front_right_line_value = digitalRead(front_right_line_sensor_pin); // read front input value
  // (The rest of your existing loop code goes here)

  // LED control logic
  if(loopCounter >= 10) { // Toggle LED every 10 iterations
    LED = !LED; // Toggle the LED state
    digitalWrite(LED_PIN, LED ? HIGH : LOW); // Apply the new LED state
    loopCounter = 0; // Reset counter
  } else {
    loopCounter++; // Increment counter
  }

  delay(25); // Maintain the loop's timing with a 25ms delay
}

// Declare your movement and other functions below
// Example:
void moveForward() {
  // Implementation of moving forward
}
