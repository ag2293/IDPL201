#include <Wire.h>
#include "Arduino.h"
#include "DFRobot_VL53L0X.h"

#define IR 11 //colour sensor

//const int IR = 13;//Connect the signal pin to the digital pin 12

DFRobot_VL53L0X sensor;//tof sensor
//MINIMUM around 2 cm!!!


bool detect_block = false;//if route is to pick up and reached end
//TO CALLIBRATE
float grabber_distance = 2.5;//distance for grabber mechanism to pick up MIN 2.0
float detection_offset_block = 3.0;


//COLOUR SENSOR DISTANCE CALLIBRATED
float detection_distance = 8.0;//min distance colour sensor callibrated to detect black vs red at (can set with screwdriver)
bool colour_read = false;//only if within distance should colour value be of significance
bool red = true;//colour red or (if not) black

bool detect_wall = true;//if route is to drop off and reached end
//TO CALLIBRATE
float wall_distance = 31.0;//where grabber will tigger release mechanism
float detection_offset_wall = 8.0;


void setup() {
  //initialize serial communication at 9600 bits per second:
  Serial.begin(9600);

  pinMode(IR,INPUT);//colour sensor

  //TOF sensor

  //join i2c bus (address optional for master)
  Wire.begin();
  //Set I2C sub-device address
  sensor.begin(0x50);
  //Set to Back-to-back mode and high precision mode
  sensor.setMode(sensor.eContinuous,sensor.eHigh);
  //Laser rangefinder begins to work
  sensor.start();
}



void loop() {
  // Get the distance in meters
  float distance = sensor.getDistance()/10;// cm
  

  int colour_detected = digitalRead(IR);
  delay(400);

  

  
  if (detect_block == true){
    distance = distance - detection_offset_block;//offset in sensor (in built dont change)
    if (distance <= detection_distance){
      colour_read = true;
      if(colour_detected == 1){
        red = true;
      }
      else if (colour_detected == 0){
        red = false;
      }
      if(red == true && colour_read == true){
        Serial.println("RED");
      }
      else if (red == false && colour_read == true){
        Serial.println("BLACK");
      }
      delay(300);
    }
    
    

    // Check if the distance is smaller than grabber distance
    if (distance < grabber_distance) {
      Serial.println("In range to pick up.");
      delay(10000);
    }
  }

  else if (detect_wall){
    distance = distance - detection_offset_wall;//offset in sensor (based on if sensor 100% vertical)
    // Check if the distance is smaller than dropping off distance
    if (distance < wall_distance) {
      Serial.println("In range to drop off.");
      delay(10000);
    }
  }

  Serial.println("distance");
  Serial.println(distance);
  

  //
}





